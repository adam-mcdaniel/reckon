searchState.loadedDescShard("reckon", 0, "Reckon\nAn application term\nA complement term\nA cons cell\nThe special built-in cut predicate.\nA solver that performs no memoization\nAn environment for a solver.\nFalsehood\nA signed integer term\nA solver that memoizes rule solutions\nA nil term\nA query to provide to the solver to prove true or false.\nA rule in the logic program.\nA configuration for a search.\nA solution to a query.\nA solver that saves and reuses rule applications and …\nA string term\nA non-variable symbol “x”\nA symbol that uses string interning\nRepresentation of a logical term.\nA search traversal strategy.\nTruth\nA variable in a logical expression – an unknown term.\nA variable term “?x”\nAdd a negative goal to the query. This means that the goal …\nAdd a positive goal to the query. This means that the goal …\nAdd a rule to the environment.\nCreate a new application term.\nApply a rule to a term in an environment.\nApply a rule to a goal term, adding the new goals to the …\nApply a rule to a query, adding the new goals to the query.\nApply all the rules in the environment to the goal term, …\nApply all the rules in the environment to all the goals …\nBorrow the name of the symbol as a string\nCheck if the search configuration allows more steps to be …\nCheck if the search configuration allows pruning.\nCheck if the search configuration allows deeper searches.\nCheck if the search configuration allows wider searches.\nWhether to clean the memoization cache after the full …\nDoes this query contain contradictory goals?\nDoes this query contain a goal that contradicts the given …\nCreate an empty query, which is interpreted as true\nEnable the use of sorting the queue of queries after a …\nEvaluate a string of rules, queries, and search …\nDefine a fact, which is a rule with no conditions.\nFilter out all the complements, returning only the …\nThe final query that was proved by the solver.\nFind solutions for the query using the given search …\nPerform a BFS search for solutions, using the given search …\nPerform a DFS search for solutions, using the given search …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the next item from the queue, depending on the …\nGet the rules for the environment.\nGet the number of steps performed in the search.\nGet a variable from the environment.\nGet an iterator over all the goals in the query\nDoes this term contain an application of the given …\nDoes the query contain any complements?\nDoes the query contain only complements?\nDoes the query contain any variables?\nDoes this term contain any variables?\nThe head of the rule This is the term that is being defined\nConvert an integer to a Peano number\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this term an application term?\nCheck if the solution is complete, i.e., if the final …\nIs the query empty, i.e. does it have no goals left to …\nIs this query a ground truth query, meaning it is a query …\nIs this rule invalid?\nIs this rule recursive? A rule is recursive if any of the …\nMerge the goals of this query with the goals of another …\nThe maximum depth to search to. If <code>None</code>, the search will …\nThe maximum width of the search – this constrains how …\nMight this rule apply to a term?\nGet the name of the symbol as a string\nComplement this term.\nCreate a new symbol from a string\nCreate a new environment with the given rules.\nCreate a new solution with the given original query, final …\nCreate a new query with the given goals to prove\nCreate a new variable with a given name.\nThe original query that was given to the solver.\nParse a search configuration from a string.\nConvert a Peano number to an integer\nCreate a new search configuration with permissive defaults.\nAttempt to prove that the query is false using the search …\nAttempt to find a solution for the query using the search …\nPrune the environment, removing unused variables.\nWhether to prune the search space by removing redundant …\nRemove useless variables.\nPush an item to the queue, depending on the traversal …\nA function that can be used to sort the queue of queries …\nSimplify the query by substituting an environment’s …\nReturn a new, reduced term.\nSimplify the query by substituting an environment’s …\nReduce this term in place.\nWhether to reduce the query after each rule application. …\nRefresh all the variables in the rule.\nGet a new unique variable that has not been used before.\nRefresh only the variables in the rule that are in the set …\nRemove a goal from the query\nRemove all the complemented goals that cannot be simplified\nRemove all the complemented goals that cannot be simplified\nRemove all the complements that we can prove are true.\nWhether to require that a rule applies to the first goal …\nReset the solver’s state, clearing any saved rule …\nReset the solver’s state, clearing any saved rule …\nClear the environment, removing all rules and variable …\nReset the solver in the environment.\nReset the number of steps performed in the search.\nSave a rule application for later reuse\nSave a rule application for later reuse\nSave a set of solutions for later reuse\nSave a set of solutions for later reuse\nGet the search configuration for the environment.\nSet a variable in the environment.\nGet the size of the rule.\nGet the sum of the sizes of all the goals in the query\nGet the size of this term.\nThe maximum number of solutions to find. If this limit is …\nThe number of steps to perform before sorting the queue of …\nSort the queue of queries using the sorter function.\nThe maximum number of steps to perform in the search. If …\nStop application after the first goal in the query\nSubstitute all the variables in the rule with the given …\nSubstitute all occurrences of some variables in the query …\nSubstitute all occurrences of variables in this term with …\nSubstitute a single variable with a term.\nGet references to the subterms of this term. This will …\nGet mutable references to the subterms of this term. This …\nThe terms that must be true for the head to be true\nTime a function and return the result and the duration\nConvert the bindings in this environment to a solution.\nConvert the bindings in this environment to a partial …\nThe traversal strategy to use for the search.\nApply a function that inspects this term, and all subterms …\nApply a function that mutates this term, and all subterms …\nUnify this term with another term.\nUnify this term with another term.\nAttempt to use a saved rule application, returning true if …\nAttempt to use a saved rule application, returning true if …\nAttempt to use saved solutions, returning them if found\nAttempt to use saved solutions, returning them if found\nGet the variables used in the environment.\nGet all the used variables in the query\nGet the set of variables used in this term.\nA function to create a new variable term from a name.\nCreate a new symbol term.\nGet the variable bindings for the environment.\nGet the variable bindings for the solution.\nThe variable bindings that were found by the solver.\nGet the mutable variable bindings for the environment.\nConstrain a rule by adding a term to the tail.\nCreate a new search configuration with the given clean …\nCreate a new search configuration with the given depth …\nCreate a new search configuration with the given pruning …\nCreate a new search configuration with the given reduce …\nCreate a new search configuration with the given require …\nSupply a new search configuration for the environment.\nCreate a new search configuration with the given maximum …\nCreate a new search configuration with the given sorter …\nEnable sorting the queue of queries after a certain number …\nCreate a new search configuration with the given step …\nCreate a new search configuration with the given stop …\nCreate a new search configuration with the given traversal …\nCreate a new search configuration with the given width …")